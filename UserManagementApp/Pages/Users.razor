@page "/users"
@using System.Collections.Generic
@using System.Linq
@using System.Threading.Tasks
@using UserManagementApp.Models
@inject UserService UserService

<h3>User List</h3>

<button @onclick="AddUser">Add User</button>

@if (users == null)
{
    <p>Loading...</p>
}
else if (users.Count == 0)
{
    <p>No users found.</p>
}
else
{
    <ul>
        @foreach (var user in users)
        {
            <li>
                <input type="text" @bind="user.Name" />
                <input type="text" @bind="user.Email" />
                <button @onclick="() => UpdateUser(user)">Update</button>
                <button @onclick="() => DeleteUser(user.Id)">Delete</button>
            </li>
        }
    </ul>
}

@code {
    private List<User> users;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            users = await UserService.GetUsersAsync();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading users: {ex.Message}");
        }
    }

    private async Task AddUser()
    {
        try
        {
            var newUser = new User { Name = "New User", Email = "newuser@example.com" };
            await UserService.AddUserAsync(newUser);
            await LoadUsers();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding user: {ex.Message}");
        }
    }

    private async Task UpdateUser(User user)
    {
        try
        {
            await UserService.UpdateUserAsync(user);
            await LoadUsers();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating user: {ex.Message}");
        }
    }

    private async Task DeleteUser(int id)
    {
        try
        {
            await UserService.DeleteUserAsync(id);
            await LoadUsers();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting user: {ex.Message}");
        }
    }
}
